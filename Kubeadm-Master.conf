apiVersion: kubeadm.k8s.io/v1beta1
kind: InitConfiguration
localAPIEndpoint:
  advertiseAddress: 0.0.0.0
  bindPort: 8443 # Change master port as per your requirements
nodeRegistration:
  name: "$(hostname -f)" # put the master hostname like ip-xx.xx.xx.xx.ec.internal
  kubeletExtraArgs:
    cloud-provider: aws # Cloud provider, enable it if required
    cni-conf-dir: /etc/cni/net.d
    cni-bin-dir: /opt/cni/bin
    hairpin-mode: hairpin-veth
    cluster-domain: cluster.local
    cluster-dns: 172.21.0.10
---
apiServer:
  extraArgs:
    authorization-mode: Node,RBAC
    cloud-provider: aws # Cloud provider, enable it if required
  timeoutForControlPlane: 4m0s
apiVersion: kubeadm.k8s.io/v1beta2
certificatesDir: /etc/kubernetes/pki
clusterName: kubeadmbasedcluster
controllerManager:
  extraArgs:
    cloud-provider: aws   # Cloud provider, enable it if required
    address: 0.0.0.0
    configure-cloud-routes: "false"  # skips cloud provider to not look for VPC with cidr range in route tables.
dns:
  type: CoreDNS
etcd:
  local:
    dataDir: /var/lib/etcd
imageRepository: k8s.gcr.io  # Create a docker proxy repository with group proxy for quay.io and k8s.gcr.io if you would like to persist them instead of pulling docker images everytime.
kind: ClusterConfiguration
kubernetesVersion: v1.15.1
networking:
  dnsDomain: cluster.local
  podSubnet: 172.21.128.0/17  # Change podcidr as per the requirement
  serviceSubnet: 172.21.0.0/17  # Change servicecidr as per the requirement
scheduler:
  extraArgs:
    address: 0.0.0.0
